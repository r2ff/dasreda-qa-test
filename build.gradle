plugins {
    id 'java-library'
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation(
            "org.aspectj:aspectjweaver:1.9.6",
            "org.aeonbits.owner:owner:1.0.12",
            "org.assertj:assertj-core:3.19.0",
            "org.junit.jupiter:junit-jupiter-api:5.7.2",
            "org.seleniumhq.selenium:selenium-java:4.0.0-rc-1",
            "org.seleniumhq.selenium:selenium-chrome-driver:4.0.0-rc-1",
            "io.rest-assured:rest-assured:4.3.1",
            "io.github.bonigarcia:webdrivermanager:4.4.3",
            "io.github.bonigarcia:selenium-jupiter:4.0.1")
    testRuntimeOnly(
            "org.slf4j:slf4j-simple:1.7.29",
            "org.junit.jupiter:junit-jupiter-engine:5.7.2")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    if (System.getProperty("threads") != null) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("threads").toInteger()
        ]
    }
}